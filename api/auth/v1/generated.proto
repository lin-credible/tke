/*
 * Copyright 2019 THL A29 Limited, a Tencent company.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = 'proto2';

package tkestack.io.tke.api.auth.v1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1";

// APIKey contains expiration time used to apply the api key.
message APIKey {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta objectMeta = 1;

  // Spec defines the desired identities of APIkey in this set.
  optional APIKeySpec spec = 2;

  optional APIKeyStatus status = 3;
}

// LocalIdentityList is the whole list of all identities.
message APIKeyList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta listMeta = 1;

  // List of api keys.
  repeated APIKey items = 2;
}

// APIKeyReq contains expiration time used to apply the api key.
message APIKeyReq {
  // Exipre is required, holds the duration of the api key become invalid. By default, 168h(= seven days)
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration expire = 2;

  // Description describes api keys usage.
  optional string description = 3;
}

// APIKeyReqPassword contains userinfo and expiration time used to apply the api key.
message APIKeyReqPassword {
  // TenantID for user
  optional string tenantID = 2;

  // UserName
  optional string username = 3;

  // Password (encoded by base64)
  optional string password = 4;

  // Description describes api keys usage.
  // +optional
  optional string description = 5;

  // Expire holds the duration of the api key become invalid. By default, 168h(= seven days)
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration expire = 6;
}

// APIKeySpec is a description of an apiKey.
message APIKeySpec {
  // APIkey is the jwt token used to authenticate user, and contains user info and sign.
  optional string apiKey = 1;

  optional string tenantID = 5;

  // Description describes api keys usage.
  // +optional
  optional string description = 2;

  // IssueAt is the created time for api key
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time issue_at = 3;

  // ExpireAt is the expire time for api key
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time expire_at = 4;
}

// APIKeyStatus is a description of an api key status.
message APIKeyStatus {
  // Disabled represents whether the apikey has been disabled.
  // +optional
  optional bool disabled = 1;

  // Deleted represents whether the apikey has been deleted.
  // +optional
  optional bool deleted = 2;
}

// LocalIdentity is an object that contains the metadata about identify used to
// login to TKE.
message LocalIdentity {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  // Spec defines the desired identities of identity in this set.
  // +optional
  optional LocalIdentitySpec spec = 2;

  // +optional
  optional LocalIdentityStatus status = 3;
}

// LocalIdentityList is the whole list of all identities.
message LocalIdentityList {
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // List of identities.
  repeated LocalIdentity items = 2;
}

// LocalIdentitySpec is a description of an identity.
message LocalIdentitySpec {
  optional string name = 7;

  optional string displayName = 8;

  optional string email = 9;

  optional string phone = 10;

  optional string hashedPassword = 4;

  optional string originalPassword = 5;

  // +optional
  optional string tenantID = 2;

  repeated string groups = 6;

  // +optional
  map<string, string> extra = 3;
}

// LocalIdentityStatus is a description of an identity status.
message LocalIdentityStatus {
  // +optional
  optional bool locked = 1;

  // The last time the local identity was updated.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 2;
}

