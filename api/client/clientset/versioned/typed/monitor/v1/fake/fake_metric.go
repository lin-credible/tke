/*
 * Copyright 2019 THL A29 Limited, a Tencent company.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	testing "k8s.io/client-go/testing"
	v1 "tkestack.io/tke/api/monitor/v1"
)

// FakeMetrics implements MetricInterface
type FakeMetrics struct {
	Fake *FakeMonitorV1
}

var metricsResource = schema.GroupVersionResource{Group: "monitor.tkestack.io", Version: "v1", Resource: "metrics"}

var metricsKind = schema.GroupVersionKind{Group: "monitor.tkestack.io", Version: "v1", Kind: "Metric"}

// Create takes the representation of a metric and creates it.  Returns the server's representation of the metric, and an error, if there is any.
func (c *FakeMetrics) Create(metric *v1.Metric) (result *v1.Metric, err error) {
	obj, err := c.Fake.
		Invokes(testing.NewRootCreateAction(metricsResource, metric), &v1.Metric{})
	if obj == nil {
		return nil, err
	}
	return obj.(*v1.Metric), err
}
